---

# vars file for product: OpsMan

# Notes:
# 1. This is the sample product config vars file for Ops Manager on top of Google Cloud Platform (GCP)
# 2. This should work together with "/products/ops-manager.yml" to parameterize the product config
# 3. The values of the YAML elements can be: a) simple static values, or 2) values stored in CredHub

# product-properties
product-properties:
  pks_tls: ((gcp_pks_rsa))
  properties:
    cloud_provider:
      type: GCP
      gcp:
        project_id: "fe-msegvich"
        network: pcf-pcf-network
        master_service_account: "pks-master@fe-msegvich.iam.gserviceaccount.com"
        worker_service_account: "pks-worker@fe-msegvich.iam.gserviceaccount.com"
        subnetwork: pcf-services-subnet
    pks_api_hostname: "api.pks.pcf-labs.com"
    plan1_selector:
      status: "Plan Active"
      active:
        name: "Xtra Small"
        description: "Example: This plan will configure a lightweight kubernetes cluster. Not
          recommended for production workloads."
        master_az_placement: ["us-central1-a"]
        worker_az_placement: ["us-central1-a"]
        master_vm_type: large.disk
        worker_vm_type: large.disk
        master_instances: 1
        worker_instances: 1
        max_worker_instances: 10
    plan2_selector:
      status: "Plan Active"
      active:
        name: "Small"
        description:
        master_az_placement: ["us-central1-a"]
        worker_az_placement: ["us-central1-a"]
        master_vm_type: large.disk
        worker_vm_type: large.disk
        master_instances: 1
        worker_instances: 3
        max_worker_instances: 10
    plan3_selector:
      status: "Plan Inactive"
    vm_extensions: ["public_ip"]
    wavefront: disabled

# network-properties
network-properties:
  network: pcf-infrastructure-subnet
  other_availability_zones:
  - name: us-central1-a
  service_network:
    name: services
  singleton_availability_zone:
    name: us-central1-a

# resource-config
resource-config:
  pivotal-container-service:
    elb_names:
    - tcp:pks-api

# errand-config
# Note: these become the "static" default settings so make it as less enabled as possible to avoid unnecessary execution
#       we can control them better in "apply changes" by using /errands/<product_slug>.yml
errand-config:
  delete-all-clusters:
    pre-delete-state: true
  pks-nsx-t-precheck:
    post-deploy-state: false
  smoke-tests:
    post-deploy-state: false
  upgrade-all-service-instances:
    post-deploy-state: true
  wavefront-alert-creation:
    post-deploy-state: false
  wavefront-alert-deletion:
    pre-delete-state: false
